events {
    worker_connections 1024;
}

http {
    upstream backend {
        server api:3000;
    }

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Content-Security-Policy "default-src 'self';";

        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # API endpoints
        location /api/ {
            proxy_pass http://backend;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend/api/v1/health;
        }

        # Metrics endpoint (protected)
        location /metrics {
            auth_basic "Metrics Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://backend/metrics;
        }

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
        limit_req zone=api_limit burst=20 nodelay;
    }
}